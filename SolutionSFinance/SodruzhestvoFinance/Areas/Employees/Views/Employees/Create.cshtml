@model SodruzhestvoFinance.Areas.Employees.Models.Employee

@{
    ViewData["Title"] = "Создать сотрудника";
    Layout = "_Layout";
}

<div class="container">
    <h1>Создать сотрудника</h1>

    <hr />
    <div class="row">
        <div class="col-md-6">
            @using (Html.BeginForm("Create", "Employees", FormMethod.Post, new { area = "Employees" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text">₽</span>
                        </div>
                        @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContactPhone, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.ContactPhone, new { htmlAttributes = new { @class = "form-control", type = "tel" } })
                    @Html.ValidationMessageFor(model => model.ContactPhone, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mt-2">
                    <input type="submit" value="Создать" class="btn btn-primary" />
                </div>
            }

            <div class="mt-2">
                @using (Html.BeginForm("Index", "Employees", FormMethod.Get, new { area = "Employees" }))
                {
                    <button type="submit" class="btn btn-secondary">Вернуться к списку</button>
                }
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}