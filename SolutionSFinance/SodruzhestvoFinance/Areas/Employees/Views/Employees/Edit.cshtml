@using Microsoft.EntityFrameworkCore.Metadata.Internal
@model SodruzhestvoFinance.Areas.Employees.Models.Employee

@{
    ViewData["Title"] = "Редактировать сотрудника";
    Layout = "_Layout";
}

<h1>Редактировать сотрудника</h1>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

@using (Html.BeginForm("EditSave", "Employees", new { id = Model.EmployeeId, area = "Employees" }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.EmployeeId) <!-- Это обязательно, чтобы id передавался -->

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label" })
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text">₽</span>
            </div>
            @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control"} })
        </div>
        @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ContactPhone, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.ContactPhone, new { htmlAttributes = new { @class = "form-control", type = "tel" } })
        @Html.ValidationMessageFor(model => model.ContactPhone, "", new { @class = "text-danger" })
    </div>

    <div class="form-group mt-2">
        <input type="submit" value="Сохранить" class="btn btn-primary" />
    </div>
}
