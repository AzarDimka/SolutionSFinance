// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SFinance.Data.DataBase;

#nullable disable

namespace SFinance.Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250314091230_initil")]
    partial class initil
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SFinance.Data.DataBase.FieldEntity", b =>
                {
                    b.Property<int>("IdField")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idField");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdField"));

                    b.Property<int>("IdHandbook")
                        .HasColumnType("int")
                        .HasColumnName("idHandbook");

                    b.Property<int>("IdTypeData")
                        .HasColumnType("int")
                        .HasColumnName("idTypeData");

                    b.Property<int>("IndexField")
                        .HasColumnType("int")
                        .HasColumnName("indexField");

                    b.Property<bool>("IsCheckDuplicate")
                        .HasColumnType("bit")
                        .HasColumnName("isCheckDuplicate");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit")
                        .HasColumnName("isEdit");

                    b.Property<bool>("IsNull")
                        .HasColumnType("bit")
                        .HasColumnName("isNull");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit")
                        .HasColumnName("isVisible");

                    b.Property<string>("NameToQuery")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("nameToQuery");

                    b.Property<string>("NameVisible")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("nameVisible");

                    b.Property<int?>("RefHandbookToField")
                        .HasColumnType("int")
                        .HasColumnName("refHandbookToField");

                    b.HasKey("IdField");

                    b.HasIndex("IdHandbook");

                    b.HasIndex("IdTypeData");

                    b.ToTable("Field", "dbo");
                });

            modelBuilder.Entity("SFinance.Data.DataBase.HandbookEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Height")
                        .HasColumnType("float")
                        .HasColumnName("height");

                    b.Property<string>("KeyField")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("keyField");

                    b.Property<string>("NameHandbook")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("nameHandbook");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar")
                        .HasColumnName("request");

                    b.Property<string>("SelectionField")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("selectionField");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar")
                        .HasColumnName("tableName");

                    b.Property<double>("Width")
                        .HasColumnType("float")
                        .HasColumnName("width");

                    b.HasKey("Id");

                    b.ToTable("Handbook", "dbo");
                });

            modelBuilder.Entity("SFinance.Data.DataBase.ProductEntity", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduct"));

                    b.Property<string>("NameProduct")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar")
                        .HasColumnName("nameProduct");

                    b.HasKey("IdProduct");

                    b.ToTable("Product", "dbo");
                });

            modelBuilder.Entity("SFinance.Data.DataBase.TypeDataEntity", b =>
                {
                    b.Property<int>("IdType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idType");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdType"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar")
                        .HasColumnName("fullName");

                    b.HasKey("IdType");

                    b.ToTable("TypeData", "dbo");
                });

            modelBuilder.Entity("SFinance.Data.DataBase.FieldEntity", b =>
                {
                    b.HasOne("SFinance.Data.DataBase.HandbookEntity", "Handbook")
                        .WithMany("Fields")
                        .HasForeignKey("IdHandbook")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SFinance.Data.DataBase.TypeDataEntity", "TypeDataEntity")
                        .WithMany("Fields")
                        .HasForeignKey("IdTypeData")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Handbook");

                    b.Navigation("TypeDataEntity");
                });

            modelBuilder.Entity("SFinance.Data.DataBase.HandbookEntity", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("SFinance.Data.DataBase.TypeDataEntity", b =>
                {
                    b.Navigation("Fields");
                });
#pragma warning restore 612, 618
        }
    }
}
